name: Update kubernetes manifests

on:
  push:
    branches: ["master"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    name: Build & Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
         platforms: 'arm64,arm'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=sha,prefix=,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm/v7

    outputs:
      tag: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}

  deploy:
    name: Deploy
    runs-on: "ubuntu-latest"
    container: alpine/helm:3.8.1
    needs: build-and-push-image
    env:
      TAG: ${{ needs.build-and-push-image.outputs.tag }}
      NAME: discordsoundboard
      CHART: chart
    steps:
      - uses: actions/checkout@v1

      - name: Copy KUBECONFIG to ~/.kube/config
        run: |
          mkdir ~/.kube
          echo $KUBECONFIG | base64 -d > ~/.kube/config
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Perform the helm upgrade
        run: |
          helm upgrade --install --set image.tag=$TAG $NAME $CHART
