apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    tier: api
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      tier: api
  template:
    metadata:
      labels:
        tier: api
    spec:
      volumes:
        - name: uploads
          persistentVolumeClaim:
            claimName: uploads
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
          image: "{{ .Values.repository }}/{{ .Values.api.image }}:{{ .Values.api.tag | default .Chart.AppVersion }}"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: uploads
              mountPath: /app/uploads
          env:
            - name: NODE_ENV
              value: production
            - name: DB_HOST
              value: discordsoundboard-postgresql
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: postgresql-password
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: clientId
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: clientSecret
            - name: BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: botToken
          livenessProbe:
            httpGet:
              path: /api
              port: 8000
          readinessProbe:
            httpGet:
              path: /api
              port: 8000

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uploads
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    tier: api