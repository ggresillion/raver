basePath: /api
definitions:
  api.AddToPlaylistPayload:
    properties:
      id:
        type: string
      type:
        type: string
    type: object
  api.HTTPError:
    properties:
      message:
        type: string
    type: object
  api.MoveInPlaylistPayload:
    properties:
      from:
        type: integer
      to:
        type: integer
    type: object
  api.MusicStateResponse:
    properties:
      playlist:
        items:
          $ref: '#/definitions/music.Track'
        type: array
      status:
        type: string
    type: object
  api.RemoveFromPlaylistPayload:
    properties:
      index:
        type: integer
    type: object
  discord.Guild:
    properties:
      icon:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  discord.User:
    properties:
      avatar:
        type: string
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  music.Album:
    properties:
      artists:
        items:
          $ref: '#/definitions/music.Artist'
        type: array
      id:
        type: string
      name:
        type: string
      thumbnail:
        type: string
    type: object
  music.Artist:
    properties:
      id:
        type: string
      name:
        type: string
      thumbnail:
        type: string
    type: object
  music.Track:
    properties:
      album:
        $ref: '#/definitions/music.Album'
      artists:
        items:
          $ref: '#/definitions/music.Artist'
        type: array
      duration:
        type: integer
      id:
        type: string
      thumbnail:
        type: string
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the DiscordSoundBoard API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: DiscordSoundBoard API
  version: "1.0"
paths:
  /auth/callback:
    get:
      consumes:
      - application/json
      description: Callback that redirects to the frontend once logged in
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      summary: Callback
      tags:
      - auth
  /auth/login:
    get:
      consumes:
      - application/json
      description: Redirects to login page
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      summary: Login
      tags:
      - auth
  /auth/user:
    get:
      consumes:
      - application/json
      description: Returns the connected user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/discord.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      summary: Get connected user
      tags:
      - auth
  /bot/guilds:
    post:
      consumes:
      - application/json
      description: Get the guilds the bot and yourself are into
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Get guilds
      tags:
      - bot
  /bot/guilds/add:
    post:
      consumes:
      - application/json
      description: Add the bot to a guild
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Add bot to guild
      tags:
      - bot
  /bot/latency:
    post:
      consumes:
      - application/json
      description: Get the server latency of the bot
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Get latency
      tags:
      - bot
  /guilds:
    get:
      consumes:
      - application/json
      description: Get the list of all guilds for the connected user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/discord.Guild'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Get guilds
      tags:
      - guilds
  /guilds/{guildID}/join:
    post:
      consumes:
      - application/json
      description: Join the user voice channel
      parameters:
      - description: Guild ID
        in: path
        name: guildID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Join the channel
      tags:
      - bot
  /guilds/{guildID}/player:
    get:
      description: Gets the music player state
      parameters:
      - description: Guild ID
        in: path
        name: guildID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MusicStateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Get player
      tags:
      - music
  /guilds/{guildID}/player/pause:
    post:
      consumes:
      - application/json
      description: Pause the current track
      parameters:
      - description: Guild ID
        in: path
        name: guildID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MusicStateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Pause
      tags:
      - music
  /guilds/{guildID}/player/play:
    post:
      consumes:
      - application/json
      description: Play the current track
      parameters:
      - description: Guild ID
        in: path
        name: guildID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MusicStateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Play
      tags:
      - music
  /guilds/{guildID}/player/playlist/add:
    post:
      consumes:
      - application/json
      description: Adds the track to the playlist
      parameters:
      - description: Guild ID
        in: path
        name: guildID
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.AddToPlaylistPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MusicStateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Add to playlist
      tags:
      - music
  /guilds/{guildID}/player/playlist/move:
    post:
      consumes:
      - application/json
      description: Moves a track position in playlist
      parameters:
      - description: Guild ID
        in: path
        name: guildID
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.MoveInPlaylistPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MusicStateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Move in playlist
      tags:
      - music
  /guilds/{guildID}/player/playlist/remove:
    post:
      consumes:
      - application/json
      description: Removes a track from the playlist
      parameters:
      - description: Guild ID
        in: path
        name: guildID
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.RemoveFromPlaylistPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MusicStateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Remove from playlist
      tags:
      - music
  /guilds/{guildID}/player/progress:
    get:
      description: Gets the music player progress
      parameters:
      - description: Guild ID
        in: path
        name: guildID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MusicStateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Get progress
      tags:
      - music
  /guilds/{guildID}/player/progress/subscribe:
    get:
      description: Subscribe to the music player progress
      parameters:
      - description: Guild ID
        in: path
        name: guildID
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MusicStateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Subscribe to progress
      tags:
      - music
  /guilds/{guildID}/player/skip:
    post:
      consumes:
      - application/json
      description: Skip the current track
      parameters:
      - description: Guild ID
        in: path
        name: guildID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MusicStateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Skip
      tags:
      - music
  /guilds/{guildID}/player/stop:
    post:
      consumes:
      - application/json
      description: Stop the current track
      parameters:
      - description: Guild ID
        in: path
        name: guildID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MusicStateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Stop
      tags:
      - music
  /guilds/{guildID}/player/subscribe:
    get:
      description: Subscribe to player events
      parameters:
      - description: Guild ID
        in: path
        name: guildID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MusicStateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Subscribe to player
      tags:
      - music
  /guilds/{guildID}/player/time:
    post:
      consumes:
      - application/json
      description: Set the current track time
      parameters:
      - description: Guild ID
        in: path
        name: guildID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MusicStateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Time
      tags:
      - music
  /music/search:
    get:
      consumes:
      - application/json
      description: Searches for a song
      parameters:
      - description: Query
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/music.Track'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPError'
      security:
      - Authentication: []
      summary: Search
      tags:
      - music
securityDefinitions:
  Authentication:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
